{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\pankaj\\\\Desktop\\\\agrim\\\\coding\\\\programmerHUB\\\\screens\\\\loginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Asset } from \"expo-asset\";\nimport { AppLoading } from \"expo\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport * as Animatable from \"react-native-animatable\";\nimport firebase from \"firebase\";\n\nfunction cacheImages(images) {\n  return images.map(function (image) {\n    if (typeof image === \"string\") {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.userLogin = function _callee(email, password) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(email && password)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n            case 4:\n              response = _context.sent;\n\n              if (response) {\n                _this.props.navigation.navigate(\"HomeScreen\");\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              Alert.alert(_context.t0.message);\n\n            case 11:\n              _context.next = 14;\n              break;\n\n            case 13:\n              Alert.alert(\"enter email and password\");\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    _this.state = {\n      checkTextInput: false,\n      password: \"\",\n      email: \"\",\n      secureTextEntry: true,\n      imageIsReady: false\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"_loadAssetsAsync\",\n    value: function _loadAssetsAsync() {\n      var imageAssets;\n      return _regeneratorRuntime.async(function _loadAssetsAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              imageAssets = cacheImages([require(\"../assets/bg.jpg\")]);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"textInputChange\",\n    value: function textInputChange(text) {\n      if (text.length !== 0) {\n        this.setState({\n          checkTextInput: true,\n          email: text\n        });\n      } else {\n        this.setState({\n          checkTextInput: false\n        });\n      }\n    }\n  }, {\n    key: \"secureTextEntry\",\n    value: function secureTextEntry() {\n      this.setState({\n        secureTextEntry: !this.state.secureTextEntry\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.isReady) {\n        return React.createElement(AppLoading, {\n          startAsync: this._loadAssetsAsync,\n          onFinish: function onFinish() {\n            return _this2.setState({\n              isReady: true\n            });\n          },\n          onError: console.warn,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        });\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/bg.jpg\"),\n        style: {\n          flex: 1,\n          height: null,\n          width: null\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), React.createElement(Animatable.View, {\n        animation: \"fadeInUpBig\",\n        style: styles.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.footerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, \"E-MAIL\"), React.createElement(View, {\n        style: styles.animation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, React.createElement(FontAwesome5, {\n        name: \"user-circle\",\n        color: \"#05375a\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Your Email-ID\",\n        style: styles.textInput,\n        onChangeText: function onChangeText(text) {\n          return _this2.textInputChange(text);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }\n      }), this.state.checkTextInput ? React.createElement(Animatable.View, {\n        animation: \"bounceIn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 27\n        }\n      }, React.createElement(Feather, {\n        name: \"check-circle\",\n        color: \"green\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 31\n        }\n      })) : null), React.createElement(Text, {\n        style: [styles.footerText, {\n          marginTop: 35\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      }, \"Password\"), React.createElement(View, {\n        style: styles.animation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, React.createElement(FontAwesome5, {\n        name: \"lock\",\n        color: \"#05375a\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 23\n        }\n      }), this.state.secureTextEntry ? React.createElement(TextInput, {\n        secureTextEntry: true,\n        placeholder: \"Your Password\",\n        style: styles.textInput,\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 27\n        }\n      }) : React.createElement(TextInput, {\n        placeholder: \"Your Password\",\n        style: styles.textInput,\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 27\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.secureTextEntry();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }\n      }, this.state.secureTextEntry ? React.createElement(Feather, {\n        name: \"eye-off\",\n        color: \"gray\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 31\n        }\n      }) : React.createElement(Feather, {\n        name: \"eye\",\n        color: \"gray\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 31\n        }\n      }))), React.createElement(Text, {\n        style: {\n          color: \"#009bd1\",\n          marginTop: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, \"Forgot Password?\"), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.userLogin(_this2.state.email, _this2.state.password);\n        },\n        style: styles.signIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [\"#5db8fe\", \"#39cff2\"],\n        style: styles.signIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 27\n        }\n      }, React.createElement(Text, {\n        style: [styles.signinText, {\n          color: \"white\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 31\n        }\n      }, \"Sign In\"))), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"SignUpScreen\");\n        },\n        style: [styles.signIn, {\n          borderColor: \"#4dc2f8\",\n          borderWidth: 1,\n          marginTop: 15,\n          borderRadius: 77\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: [styles.signinText, {\n          color: \"#4dc2f8\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 27\n        }\n      }, \"Sign Up\")))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#b8b8b8\"\n  },\n  header: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    paddingHorizontal: 25,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 3,\n    backgroundColor: \"white\",\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 15,\n    paddingVertical: 20\n  },\n  headerText: {\n    color: \"#05375a\",\n    fontSize: 18\n  },\n  footerText: {\n    color: \"#05375a\",\n    fontSize: 18\n  },\n  animation: {\n    flexDirection: \"row\",\n    marginTop: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: \"#f2f2f2\",\n    paddingBottom: 5\n  },\n  textInput: {\n    flex: 1,\n    paddingLeft: 10,\n    color: \"#b8b8b8\"\n  },\n  button: {\n    alignItems: \"center\",\n    marginTop: 50\n  },\n  signIn: {\n    width: \"100%\",\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  signinText: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/pankaj/Desktop/agrim/coding/programmerHUB/screens/loginScreen.js"],"names":["React","Asset","AppLoading","LinearGradient","FontAwesome5","Feather","Animatable","firebase","cacheImages","images","map","image","Image","prefetch","fromModule","downloadAsync","LoginScreen","props","userLogin","email","password","auth","signInWithEmailAndPassword","response","navigation","navigate","Alert","alert","message","state","checkTextInput","secureTextEntry","imageIsReady","imageAssets","require","Promise","all","text","length","setState","isReady","_loadAssetsAsync","console","warn","styles","container","StyleSheet","absoluteFill","flex","height","width","header","footer","footerText","animation","textInput","textInputChange","marginTop","color","button","signIn","signinText","borderColor","borderWidth","borderRadius","Component","create","backgroundColor","justifyContent","paddingHorizontal","paddingBottom","borderTopLeftRadius","borderTopRightRadius","paddingVertical","headerText","fontSize","flexDirection","borderBottomWidth","borderBottomColor","paddingLeft","alignItems","fontWeight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    Alert,\r\n} from \"react-native\";\r\nimport { Asset } from \"expo-asset\";\r\nimport { AppLoading } from \"expo\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport FontAwesome5 from \"react-native-vector-icons/FontAwesome5\";\r\nimport Feather from \"react-native-vector-icons/Feather\";\r\nimport * as Animatable from \"react-native-animatable\";\r\nimport firebase from \"firebase\";\r\nfunction cacheImages(images) {\r\n    return images.map((image) => {\r\n        if (typeof image === \"string\") {\r\n            return Image.prefetch(image);\r\n        } else {\r\n            return Asset.fromModule(image).downloadAsync();\r\n        }\r\n    });\r\n}\r\nexport default class LoginScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkTextInput: false,\r\n            password: \"\",\r\n            email: \"\",\r\n            secureTextEntry: true,\r\n            imageIsReady: false,\r\n        };\r\n    }\r\n  userLogin = async (email, password) => {\r\n      if (email && password) {\r\n          try {\r\n              const response = await firebase\r\n                  .auth()\r\n                  .signInWithEmailAndPassword(email, password);\r\n              if (response) {\r\n                  this.props.navigation.navigate(\"HomeScreen\");\r\n              }\r\n          } catch (error) {\r\n              Alert.alert(error.message);\r\n          }\r\n      } else {\r\n          Alert.alert(\"enter email and password\");\r\n      }\r\n  };\r\n  async _loadAssetsAsync() {\r\n      const imageAssets = cacheImages([require(\"../assets/bg.jpg\")]);\r\n\r\n      await Promise.all([...imageAssets]);\r\n  }\r\n  textInputChange(text) {\r\n      if (text.length !== 0) {\r\n          this.setState({\r\n              checkTextInput: true,\r\n              email: text,\r\n          });\r\n      } else {\r\n          this.setState({\r\n              checkTextInput: false,\r\n          });\r\n      }\r\n  }\r\n  secureTextEntry() {\r\n      this.setState({\r\n          secureTextEntry: !this.state.secureTextEntry,\r\n      });\r\n  }\r\n  render() {\r\n      if (!this.state.isReady) {\r\n          return (\r\n              <AppLoading\r\n                  startAsync={this._loadAssetsAsync}\r\n                  onFinish={() => this.setState({ isReady: true })}\r\n                  onError={console.warn}\r\n              />\r\n          );\r\n      }\r\n      return (\r\n          <View style={styles.container}>\r\n              <View style={StyleSheet.absoluteFill}>\r\n                  <Image\r\n                      source={require(\"../assets/bg.jpg\")}\r\n                      style={{ flex: 1, height: null, width: null }}\r\n                  />\r\n              </View>\r\n              <View style={styles.header}></View>\r\n\r\n              <Animatable.View animation=\"fadeInUpBig\" style={styles.footer}>\r\n                  <Text style={styles.footerText}>E-MAIL</Text>\r\n                  <View style={styles.animation}>\r\n                      <FontAwesome5 name=\"user-circle\" color=\"#05375a\" size={20} />\r\n                      <TextInput\r\n                          placeholder=\"Your Email-ID\"\r\n                          style={styles.textInput}\r\n                          onChangeText={(text) => this.textInputChange(text)}\r\n                      />\r\n                      {this.state.checkTextInput ? (\r\n                          <Animatable.View animation=\"bounceIn\">\r\n                              <Feather name=\"check-circle\" color=\"green\" size={20} />\r\n                          </Animatable.View>\r\n                      ) : null}\r\n                  </View>\r\n\r\n                  <Text style={[styles.footerText, { marginTop: 35 }]}>Password</Text>\r\n                  <View style={styles.animation}>\r\n                      <FontAwesome5 name=\"lock\" color=\"#05375a\" size={20} />\r\n                      {this.state.secureTextEntry ? (\r\n                          <TextInput\r\n                              secureTextEntry={true}\r\n                              placeholder=\"Your Password\"\r\n                              style={styles.textInput}\r\n                              value={this.state.password}\r\n                              onChangeText={(text) => this.setState({ password: text })}\r\n                          />\r\n                      ) : (\r\n                          <TextInput\r\n                              placeholder=\"Your Password\"\r\n                              style={styles.textInput}\r\n                              value={this.state.password}\r\n                              onChangeText={(text) => this.setState({ password: text })}\r\n                          />\r\n                      )}\r\n                      <TouchableOpacity onPress={() => this.secureTextEntry()}>\r\n                          {this.state.secureTextEntry ? (\r\n                              <Feather name=\"eye-off\" color=\"gray\" size={20} />\r\n                          ) : (\r\n                              <Feather name=\"eye\" color=\"gray\" size={20} />\r\n                          )}\r\n                      </TouchableOpacity>\r\n                  </View>\r\n                  <Text style={{ color: \"#009bd1\", marginTop: 15 }}>\r\n            Forgot Password?\r\n                  </Text>\r\n                  <View style={styles.button}>\r\n                      <TouchableOpacity\r\n                          onPress={() => {\r\n                              this.userLogin(this.state.email, this.state.password);\r\n                          }}\r\n                          style={styles.signIn}\r\n                      >\r\n                          <LinearGradient\r\n                              colors={[\"#5db8fe\", \"#39cff2\"]}\r\n                              style={styles.signIn}\r\n                          >\r\n                              <Text style={[styles.signinText, { color: \"white\" }]}>\r\n                  Sign In\r\n                              </Text>\r\n                          </LinearGradient>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                          onPress={() => this.props.navigation.navigate(\"SignUpScreen\")}\r\n                          style={[\r\n                              styles.signIn,\r\n                              {\r\n                                  borderColor: \"#4dc2f8\",\r\n                                  borderWidth: 1,\r\n                                  marginTop: 15,\r\n                                  borderRadius: 77,\r\n                              },\r\n                          ]}\r\n                      >\r\n                          <Text\r\n                              style={[\r\n                                  styles.signinText,\r\n                                  {\r\n                                      color: \"#4dc2f8\",\r\n                                  },\r\n                              ]}\r\n                          >\r\n                Sign Up\r\n                          </Text>\r\n                      </TouchableOpacity>\r\n                  </View>\r\n              </Animatable.View>\r\n          </View>\r\n      );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#b8b8b8\",\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        justifyContent: \"flex-end\",\r\n        paddingHorizontal: 25,\r\n        paddingBottom: 50,\r\n    },\r\n    footer: {\r\n        flex: 3,\r\n        backgroundColor: \"white\",\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 20,\r\n    },\r\n    headerText: {\r\n        color: \"#05375a\",\r\n        fontSize: 18,\r\n    },\r\n    footerText: {\r\n        color: \"#05375a\",\r\n        fontSize: 18,\r\n    },\r\n    animation: {\r\n        flexDirection: \"row\",\r\n        marginTop: 10,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: \"#f2f2f2\",\r\n        paddingBottom: 5,\r\n    },\r\n    textInput: {\r\n        flex: 1,\r\n        paddingLeft: 10,\r\n        color: \"#b8b8b8\",\r\n    },\r\n    button: {\r\n        alignItems: \"center\",\r\n        marginTop: 50,\r\n    },\r\n    signIn: {\r\n        width: \"100%\",\r\n        height: 50,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    signinText: {\r\n        fontSize: 18,\r\n        fontWeight: \"bold\",\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}